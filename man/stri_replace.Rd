% Generated by roxygen2 (4.0.2): do not edit by hand
\name{stri_replace_all}
\alias{stri_replace}
\alias{stri_replace_all}
\alias{stri_replace_all_charclass}
\alias{stri_replace_all_coll}
\alias{stri_replace_all_fixed}
\alias{stri_replace_all_regex}
\alias{stri_replace_first}
\alias{stri_replace_first_charclass}
\alias{stri_replace_first_coll}
\alias{stri_replace_first_fixed}
\alias{stri_replace_first_regex}
\alias{stri_replace_last}
\alias{stri_replace_last_charclass}
\alias{stri_replace_last_coll}
\alias{stri_replace_last_fixed}
\alias{stri_replace_last_regex}
\title{Replace Occurrences of a Pattern}
\usage{
stri_replace_all(str, replacement, ..., regex, fixed, coll, charclass)

stri_replace_first(str, replacement, ..., regex, fixed, coll, charclass)

stri_replace_last(str, replacement, ..., regex, fixed, coll, charclass)

stri_replace(str, replacement, ..., regex, fixed, coll, charclass,
  mode = c("first", "all", "last"))

stri_replace_all_charclass(str, pattern, replacement, merge = FALSE)

stri_replace_first_charclass(str, pattern, replacement)

stri_replace_last_charclass(str, pattern, replacement)

stri_replace_all_coll(str, pattern, replacement, opts_collator = NULL)

stri_replace_first_coll(str, pattern, replacement, opts_collator = NULL)

stri_replace_last_coll(str, pattern, replacement, opts_collator = NULL)

stri_replace_all_fixed(str, pattern, replacement)

stri_replace_first_fixed(str, pattern, replacement)

stri_replace_last_fixed(str, pattern, replacement)

stri_replace_all_regex(str, pattern, replacement, opts_regex = NULL)

stri_replace_first_regex(str, pattern, replacement, opts_regex = NULL)

stri_replace_last_regex(str, pattern, replacement, opts_regex = NULL)
}
\arguments{
\item{str}{character vector with strings to search in}

\item{replacement}{character vector with replacements for matched patterns}

\item{...}{additional arguments passed to the underlying functions}

\item{mode}{single string;
one of: \code{"first"} (the default), \code{"all"}, \code{"last"}}

\item{pattern,regex,fixed,coll,charclass}{character vector defining search patterns;
for more details refer to \link{stringi-search}}

\item{merge}{logical;
should consecutive matches be merged into one string;  \code{stri_replace_all_charclass} only}

\item{opts_collator}{a named list with \pkg{ICU} Collator's settings
as generated with \code{\link{stri_opts_collator}}; \code{NULL}
for default settings; \code{stri_replace_*_coll} only}

\item{opts_regex}{a named list with \pkg{ICU} Regex settings
as generated with \code{\link{stri_opts_regex}}; \code{NULL}
for default settings;
\code{stri_replace_*_regex} only}
}
\value{
All the functions return a character vector.
}
\description{
These functions replace with the given replacement string every/first/last
substring of the input that matches the specified \code{pattern}.
}
\details{
Vectorized over \code{str}, \code{pattern}, \code{replacement},
and \code{merge}.

These functions scan the input string for matches of the pattern.
Input that is not part of any match is left unchanged;
each match is replaced in the result by the replacement string.

In case of \code{stri_replace_*_regex},
the replacement string may contain references to capture groups
(in round parentheses).
References are of the form \code{$n}, where \code{n} is the number
of the capture group (their numbering starts from 1).
In order to treat the \code{$} character literally,
escape it with a backslash.

\code{stri_replace}, \code{stri_replace_all}, \code{stri_replace_first},
and \code{stri_replace_last} are convenience functions.
They just call \code{stri_replace_*_*}, depending on arguments used.
Unless you are a very lazy person, please call the underlying functions
directly for better performance.
}
\examples{
\donttest{
stri_replace_all_charclass("aaaa", "[a]", "b", merge=c(TRUE, FALSE))

stri_replace_all_charclass("a\\nb\\tc   d", "\\\\p{WHITE_SPACE}", " ")
stri_replace_all_charclass("a\\nb\\tc   d", "\\\\p{WHITE_SPACE}", " ", merge=RUE)

s <- "Lorem ipsum dolor sit amet, consectetur adipisicing elit."
stri_replace_all_fixed(s, " ", "#")
stri_replace_all_fixed(s, "o", "0")

stri_replace_all_regex(s, " .*? ", "#")
stri_replace_all_regex(s, "(el|s)it", "1234")
stri_replace_all_regex('abaca', 'a', c('!', '*'))
stri_replace_all_regex('123|456|789', '(\\\\p{N}).(\\\\p{N})', '$2-$1')
stri_replace_all_regex(c("stringi R", "REXAMINE", "123"), '( R|R.)', ' r ')
}
}
\seealso{
Other search_replace: \code{\link{stri_replace_na}};
  \code{\link{stringi-search}}
}

